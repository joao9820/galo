<div class="page-head">
    <h2>Dados da Banca Cadastrada</h2>
</div>
<div class="cl-mcont">
    <div class="row">
        <div class="block-flat">
            <div class="content">

                <?php
                $form->setAttribute('action', $this->url('navegacao', array('controller' => 'membros_banca-membrosbanca', 'action' => 'gravar')));
                $form->setAttribute('class', 'form-horizontal');
                $form->setAttribute('method', 'post');
                $form->setAttribute('data-role', 'form');
                $form->prepare();
                echo $this->form()->openTag($form);
                $form->get('id')->setValue(Estrutura\Helpers\Cript::enc($dadosBancaExaminadora->getId()));
                $form->get('id_banca_examinadora')->setValue($dadosBancaExaminadora->getId());
                echo $this->formHidden($form->get('id'));
                echo $this->formHidden($form->get('id_banca_examinadora'));

                // Método para o autocomplete do Professor / convertendo id em nm
                $professor = new \Professor\Service\ProfessorService();
                $arrProfessor = $professor->getProfessorToArray($form->get('id_professor')->getValue());
                $form->setData(['id_professor' => $arrProfessor['nm_professor']]);

                #xd($dadosBancaExaminadora);

                ?>


                <div class="bs-callout bs-callout-primary">
                    <div class="row">
                        <div class="col-md-12">
                            <h4><b>Data da
                                    Banca:</b> <?= Estrutura\Helpers\Data::converterDataBancoMySQL2Brazil($dadosBancaExaminadora->getDtBanca()) ?>
                            </h4>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <b>Quant. Professores:</b>
                            <text id="count"><?= $quantidade_professores ?></text>
                        </div>
                    </div>

                </div>


                <!-- Form para adicionar o professor como membro da Banca -->
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border" style="font-size: 200%;">Adicionar membro à Banca</legend>
                    <div id="mensagem_professor"></div>
                    <div class="form-group">
                        <div class="col-md-4">
                            <?= $this->formRow($form->get('id_professor')) ?>
                            <div class="help-block with-errors"></div>
                        </div>
                        <div class="col-md-4">
                            <?= $this->formRow($form->get('cs_orientador')) ?>
                            <div class="help-block with-errors"></div>
                        </div>
                        <div class="col-md-2">
                            <a style="margin-top: 25px;" id="adicionar_professor" class="btn btn-primary" href="#">Adicionar
                                professor</a>
                        </div>
                    </div>
                    <div class="row" id="listar-professores"></div>
                </fieldset>
                <?= $this->form()->closeTag(); ?>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript"
        src="/assets/compact-js/moment.js,bootstrap-datetimepicker.min.js,validator.min.js,jquery.mask.min.js,jquery.complexify.js,usuario|usuario|cadastro.js"></script>
<script type="text/javascript" language="javascript" class="init">
    $(document).ready(function () {
        $("#dt_banca").datepicker(
            {dateFormat: 'dd/mm/yy'}
        );

        $("input#id_professor").autocomplete({
            minLength: 3,
            source: "/professor-professor/autocompleteprofessor"
        });

        //Função que faz a listagem ser paginada.
        function carregarProfessoresAjax() {
            $.ajax({
                type: "post",
                dataType: "text",
                cache: false,
                url: '/banca_examinadora-bancaexaminadora/listar-professores',
                async: true,
                data: {id_banca_examinadora: <?=$dadosBancaExaminadora->getId()?>},
                beforeSend: function () {
                    $('#listar-professores').html(
                        '<div class="row"><div class="col-md-12 text-center"><p><img src="/assets/img/carregando.gif"><p></div></div>'
                    );
                },
                success: function (data) {
                    $('#listar-professores').html(data);
                }
            });
        }

        carregarProfessoresAjax(); //Chama a Paginação da listagem

        /*Função Ajax que adiciona os encontros ao Banco de dados*/
        $('#adicionar_professor').click(function () {
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/banca_examinadora-bancaexaminadora/adicionar-professores',
                async: true,
                data: {
                    id_banca_examinadora: $("#id_banca_examinadora").val(),
                    id_professor: $("#id_professor").val(),
                    cs_orientador: $("#cs_orientador").val()
                },
                success: function (response) {
                    $('#mensagem_professor').removeClass("bs-callout bs-callout-danger").addClass("bs-callout bs-callout-success");
                    $("#id_professor").val("");
                    $("#cs_orientador").val("");
                    if (response.sucesso == true) {
                        $('#mensagem_professor').show();
                        $('#mensagem_professor').html("<p>Professor adicionado com sucesso!</p>");
                        $('#count').html(response.qtd_inscritos); // atualizando a quantidade de inscritos
                        carregarProfessoresAjax();
                        setTimeout(function() {
                            $('#mensagem_professor').fadeOut('fast'); // "mensagem_professor" fechará após 3 minutos.
                        }, 5000); // O valor é representado em milisegundos.
                    } else {
                        if(response.nm_professor == null) {
                            mensagem = "<p>Professor não localizado na base!</p>";
                        } else {
                            mensagem = "<p>Este professor já foi adicionado!</p>";
                        }
                        $('#mensagem_professor').show();
                        $('#mensagem_professor').html(mensagem);
                        $('#mensagem_professor').removeClass("bs-callout bs-callout-success").addClass("bs-callout bs-callout-danger");
                        setTimeout(function () {
                            $('#mensagem_professor').fadeOut('fast'); // "mensagem_professor" fechará após 3 minutos.
                        }, 5000); // O valor é representado em milisegundos.
                    }
                }
            });
        });

        //Colocar o foco no componente.
        $("#id_professor").focus();

    });
</script>
